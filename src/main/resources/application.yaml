server:
  port: ${SERVER_PORT}

spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: ${SPRING_APPLICATION_NAME}
  main:
    allow-bean-definition-overriding: true

  servlet:
    multipart:
      enabled: ${SPRING_SERVLET_MULTIPART_ENABLED}
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    dialect: ${SPRING_DATASOURCE_DIALECT}

  jpa:
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
    open-in-view: ${SPRING_JPA_OPEN_IN_VIEW}
    database: ${SPRING_JPA_DATABASE}
    show-sql: ${SPRING_JPA_SHOW_SQL}
    generate-ddl: ${SPRING_JPA_GENERATE_DDL}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${SPRING_DATA_REDIS_PASSWORD}

  cloud:
    aws:
      credentials:
        access-key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
        secret-key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
      region:
        static: ${CLOUD_AWS_REGION}
      s3:
        bucket: ${CLOUD_AWS_S3_BUCKET}
        base-url: ${CLOUD_AWS_S3_BASE_URL}
      stack:
        auto: ${CLOUD_AWS_CREDENTIALS_STACK_AUTO}

  web:
    cors:
      allowed-origins: "${SPRING_WEB_CORS_ALLOWED_ORIGINS}"  # React 개발서버 주소
      allowed-methods: "${SPRING_WEB_CORS_ALLOWED_METHODS}"
      allowed-headers: "${SPRING_WEB_CORS_ALLOWED_HEADERS}"
      allow-credentials: ${SPRING_WEB_CORS_ALLOWED_CREDENTIALS}

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      model: ${OPENAI_MODEL}
      url: ${OPENAI_URL}